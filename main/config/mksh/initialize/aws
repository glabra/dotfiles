require_secrets

alias riofs='\
  AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
  AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
  riofs'
alias box='\
  if test -d "/run/user/${USER_ID}/dropbox"
  then cd "/run/user/${USER_ID}/dropbox"
  else mkdir /run/user/${USER_ID}/dropbox 2> /dev/null && \
    riofs "${AWS_S3_BUCKET_DROPBOX}" /run/user/${USER_ID}/dropbox && \
    cd /run/user/${USER_ID}/dropbox
  fi'
alias unbox='\
  if test "`pwd`" == /run/user/${USER_ID}/dropbox; then cd "${HOME}";fi && \
  fusermount -u /run/user/${USER_ID}/dropbox && \
  rmdir /run/user/${USER_ID}/dropbox'
alias unboxx='unbox & x'

# ampache on Amazon EC2 control command
ampache () {
  local __ampache_api=" \
    curl --silent \
    --header x-api-key:${AWS_AMPACHE_API_KEY} \
    ${AWS_AMPACHE_API_ENDPOINT}/ -X"
  case "$1" in
    'start')
      ${__ampache_api} PUT
      printf '\n'
      ;;
    'stop')
      ${__ampache_api} DELETE
      printf '\n'
      ;;
    'status' | 'get-host' | 'open')
      local host=`\
        ${__ampache_api} GET \
        | sed -ne 's/^"\(ec2[0-9-]\+\.compute-[0-9]\+\.amazonaws\.com\)"$/\1/p'`
      if test -z "${host}"
      then
        printf '%s\n' 'ampache is stopped.'
      elif test "$1" = 'open'
      then
        xdg-open "http://${host}/ampache"
      elif test "$1" = 'get-host'
      then
        printf '%s\n' "${host}"
      else
        printf '%s\n' "ampache is running. (Host: ${host})"
      fi
      ;;
    *)
      printf '%s\n' 'ampache (start|stop|status|open|get-host)'
      ;;
  esac
}
