[[ $- != *i* ]] && return

# consts
MKSH_CONFIG="${HOME}/.config/mksh"

# trap logout script
test -f "${MKSH_CONFIG}/logout" && trap ". ${MKSH_CONFIG}/logout; exit" EXIT

### initialize callback system {
execute_callback () {
  for cb in $(eval echo '${__'${1}':-}')
  do
    ${cb}
    unset -f ${cb}
  done

  eval unset '__'${1}
}

register_callback () {
  eval '__'${1}=${2} '${__'${1}':-}'
}

after_initialize () {
  register_callback after_initialize ${1}
}
### } initialize callback system

### load settings {
secrets_path="${HOME}/.local/secrets.sh"
conf_dir="${MKSH_CONFIG}/conf.d"
alias require_secrets='return'

if test -f "${secrets_path}"
then
  . "${secrets_path}"
  aws=true
  alias require_secrets=':'
fi

# enable rbenv?
[[ -d "${HOME}/.rbenv" ]] && rbenv="${HOME}/.rbenv"

# load config
for i in `ls -1 "${conf_dir}"`
do
  if test "${i}" == '_'
  then
    . "${conf_dir}/_"
  elif [[ -n "$(eval echo '${'${i}'}')" ]] || type "${i}" > /dev/null 2>&1
  then
    . "${conf_dir}/${i}"
  fi
done

# cleanup
unset aws
unset secrets_path
unset conf_dir
unalias require_secrets
### } load settings

execute_callback after_initialize

# initialization finished
printf '%s\n' "`LANG=C date`"

