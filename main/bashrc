[[ $- != *i* ]] && return

export LANG="en_US.UTF-8"
export PATH="${HOME}/.local/bin:${PATH}"
unset HISTFILE
unset HISTSIZE
unset HISTFILESIZE

alias rm='rm -i'
alias ls='ls --color=auto'
alias q='exit'
alias ':q'='exit'
alias x='exit'
alias '..'='cd ..'
alias less='less -R'
alias bmount='udisksctl mount -b'
alias bumount='udisksctl unmount -b'
alias fuserumount='fusermount -u'
alias alsa-reload='alsactl nrestore'
alias poweroff='systemctl poweroff'
alias reboot='systemctl reboot'

alias sl='ls'
alias ks='ls'
alias l='ls'
alias d='cd'
alias vf='cd'
alias scd='cd'
alias svi='vi'
alias iv='vi'
alias rf='rm'
alias vp='cp'

[[ -f "${HOME}/.local/secrets.sh" ]] && . "${HOME}/.local/secrets.sh"

alias box="mkdir /run/user/${UID}/dropbox 2> /dev/null; \
  riofs ${AWS_S3_BUCKET_DROPBOX} /run/user/${UID}/dropbox && \
  cd /run/user/${UID}/dropbox"
alias unbox="fusermount -u /run/user/${UID}/dropbox && \
  rmdir /run/user/${UID}/dropbox"

# ampache on Amazon EC2 control command
ampache () {
  local __ampache_api="curl --silent --header x-api-key:${AWS_AMPACHE_API_KEY} ${AWS_AMPACHE_API_ENDPOINT}/ -X"
  case "$1" in
    'start')
      ${__ampache_api} PUT
      printf '\n'
      ;;
    'stop')
      ${__ampache_api} DELETE
      printf '\n'
      ;;
    'status' | 'get-host' | 'open')
      local host=`${__ampache_api} GET | sed -ne 's/^"\(ec2[0-9-]\+\.compute-[0-9]\+\.amazonaws\.com\)"$/\1/p'`
      if test -z "${host}"
      then
        printf '%s\n' 'ampache is stopped.'
      elif test "$1" = 'open'
      then
        chromium http://${host}/ampache &
      elif test "$1" = 'get-host'
      then
        printf '%s\n' "${host}"
      else
        printf '%s\n' "ampache is running. (Host: ${host})"
      fi
      ;;
    *)
      printf '%s\n' "ampache (start|stop|status|open|get-host)"
      ;;
  esac
}
complete -W 'start stop status open get-host' ampache

# alias vi to nvim
if type 'nvim' > /dev/null 2>&1
then
  alias vi='nvim'
  alias vim='nvim'
fi

# git
for f in \
  '/usr/share/git/completion/git-completion.bash' \
  '/usr/share/git/completion/git-prompt.sh'
do
  [[ -e "${f}" ]] && . "${f}"
done

if type '__git_ps1' > /dev/null 2>&1
then
  PS1='\[\e[1;37m\]\W\[\e[0m\]`__git_ps1 ":%s"`\[\e[1;37m\]\$\[\e[0m\] '
else
  PS1='\[\e[1;37m\]\W\$\[\e[0m\] '
fi

if type 'git' > /dev/null 2>&1
then
  alias g='git'
  alias gti='git'

  __git-conf () {
    git config user.name "$1"
    git config user.email "$2"
  }

  alias 'git-conf'="__git-conf '${GITCONF_DEFAULT_USERNAME}' '${GITCONF_DEFAULT_EMAIL}'"
  alias 'git-conf-decapoda'="__git-conf '${GITCONF_DECAPODA_USERNAME}' '${GITCONF_DECAPODA_EMAIL}'"
  alias 'git-conf-dog'="__git-conf '${GITCONF_DOG_USERNAME}' '${GITCONF_DOG_EMAIL}'"
fi

# rbenv
rbenv_path="${HOME}/.rbenv"
if test -d "${rbenv_path}"
then
  export PATH="${rbenv_path}:${PATH}"
  eval "$(rbenv init -)"
  alias rx='rbenv exec'
fi
unset rbenv_path

# stack
if type 'stack' > /dev/null 2>&1
then
  alias s='stack'
  alias sg='stack exec -- ghci'
  alias sgi='stack ghci'
  alias sx='stack exec --'
fi

# android-studio
android_studio_path="${HOME}/.local/android-studio"
if test -d "${android_studio_path}"
then
  export PATH="${android_studio_path}:${PATH}"
  export ANDROID_HOME="${HOME}/Android/Sdk"
fi
unset android_studio_path

# for delete key
tput smkx

printf '%s\n' "`LANG=C date`"

