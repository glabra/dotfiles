# completion
if [ -n "${BASH_VERSION:-}" ]; then
	source_if_exists "/etc/bash-completion/bash_completion"
	source_if_exists "/usr/share/bash-completion/bash_completion"
fi

# fast-sync
if [ -x "${HOME}/.dotfiles/bootstrap.sh" ]; then
	dotfiles_bootstrap () {
		("${HOME}/.dotfiles/bootstrap.sh" "$@")
	}

	dotfiles_move () {
		(
		if [ -z "${2:-}" ]; then
			printf 'Usage: dotfiles_move TYPE FILE\n'
			return
		fi

		file=$(realpath "$2")

		case "$file" in
			${HOME}/.dotfiles/*) return ;;
			${HOME}/*) ;;
			*) return ;;
		esac

		[ -d "${HOME}/.dotfiles/$1" ] || return

		dest="${HOME}/.dotfiles/$1/${file#${HOME}/.}"
		printf -- 'move "%s" into "%s" [y/N] ' "$2" "$dest"
		read -r _in
		[ "_${_in:0:1}" = '_y' -o "_${_in:0:1}" = '_Y' ] || return

		dir=$(dirname "$dest")
		[ ! -d $dir ] && mkdir -p $dir
		mv -- "$file" "$dest"
		"${HOME}/.dotfiles/bootstrap.sh" sync
		)
	}

	dotfiles_rm () {
		(
		if [ -z "${1:-}" ]; then
			printf 'Usage: dotfiles_move FILE\n'
			return
		fi

		file=$(realpath "$1")

		case "$file" in
			${HOME}/.dotfiles/*) ;;
			*) return ;;
		esac

		printf -- 'remove "%s" [y/N] ' "$file"
		read -r _in
		[ "_${_in:0:1}" = '_y' -o "_${_in:0:1}" = '_Y' ] || return

		rm -f -- "$file"
		"${HOME}/.dotfiles/bootstrap.sh" sync
		)
	}
fi

